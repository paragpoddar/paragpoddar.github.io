{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/page-not-found.component.ts","webpack:///./src/app/report/checkCategory/component.html","webpack:///./src/app/report/checkCategory/component.scss","webpack:///./src/app/report/checkCategory/component.ts","webpack:///./src/app/report/checkDetail/component.html","webpack:///./src/app/report/checkDetail/component.scss","webpack:///./src/app/report/checkDetail/component.ts","webpack:///./src/app/report/dashboard/component.html","webpack:///./src/app/report/dashboard/component.scss","webpack:///./src/app/report/dashboard/component.ts","webpack:///./src/app/report/report.module.ts","webpack:///./src/app/report/report.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { PageNotFound } from './page-not-found.component';\nimport { ReportModule } from './report/report.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageNotFound\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot([\n      { path: '', redirectTo: '/report/dashboard', pathMatch: 'full' },\n      { path: '**', component: PageNotFound }\n    ]),\n    ReportModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\n@Component({\n    selector: 'app-pagenotfound',\n    template: `\n        <h1> Page Not Found.. </h1>\n    `\n})\nexport class PageNotFound {}","module.exports = \"<mat-toolbar>\\n  <mat-toolbar-row>\\n    <span class=\\\"example-spacer\\\"></span>\\n    <button mat-button [matMenuTriggerFor]=\\\"menu\\\" [disabled]=\\\"regionSelectValidate\\\" >{{selectedRegion}}</button>\\n    <mat-menu #menu=\\\"matMenu\\\">\\n      <div style=\\\"height: 300px;\\\">\\n          <button mat-menu-item *ngIf=\\\"regions && regions.length>1\\\" (click)=\\\"onRegionChange('all')\\\">all</button>\\n          <button mat-menu-item *ngFor=\\\"let region of regions\\\" (click)=\\\"onRegionChange(region)\\\"> {{region}}</button>\\n      </div>\\n    </mat-menu>\\n    <!-- <mat-menu #menu=\\\"matMenu\\\">\\n        <button mat-menu-item>Item 1</button>\\n        <button mat-menu-item>Item 2</button>\\n      </mat-menu> -->\\n    <!-- <div class=\\\"toolbar-region-container\\\">\\n      <button mat-button class=\\\"toolbar-region-button\\\" (click)=\\\"isOpen=!isOpen\\\" [class.open]=\\\"isOpen\\\">{{selectedRegion}}</button>\\n      <div class=\\\"dropdown mat-elevation-z1\\\" [class.open]=\\\"isOpen\\\">\\n        <p>dropdown content</p>\\n      </div>\\n    </div> -->\\n    <!-- <app-regionmenu [selectedRegion]=\\\"selectedRegion\\\" [regions]=\\\"regions\\\"></app-regionmenu> -->\\n\\n    <a mat-button routerLink=\\\"/\\\">Main Dashboard</a>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<div class=\\\"container-one\\\">\\n  <!-- <mat-form-field *ngIf=\\\"!globalService\\\">\\n    <mat-select placeholder=\\\"Regions\\\" (selectionChange)=\\\"onRegionChange(regionName)\\\" [(ngModel)]=\\\"regionName\\\">\\n      <mat-option *ngFor=\\\"let region of regions\\\" [value]=\\\"region\\\">{{region}}</mat-option>\\n    </mat-select>\\n  </mat-form-field> -->\\n  <div class=\\\"detail-container\\\">\\n    <div *ngFor=\\\"let checkCategory of checkCategories\\\">\\n      <mat-card class=\\\"example-card\\\">\\n        <mat-card-header mat-card-image [ngClass]=\\\"checkCategory.goodConditionCount>checkCategory.badConditionCount ? 'condition-good' : 'condition-bad'\\\" >\\n          <mat-card-title>\\n            <h3>{{checkCategory.checkCategoryName}}</h3>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n          <p>Number of check of resources in good conditon : {{checkCategory.goodConditionCount}}</p>\\n          <p>Number of check of resources in bad conditon : {{checkCategory.badConditionCount}}</p>\\n        </mat-card-content>\\n        <mat-card-actions>\\n            <button mat-button (click)=\\\"goToCheckDetail(checkCategory)\\\">Details</button>\\n          </mat-card-actions>\\n      </mat-card>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".example-icon {\\n  padding: 0 14px; }\\n\\n.example-spacer {\\n  flex: 1 1 auto; }\\n\\n.detail-container {\\n  display: flex;\\n  flex-wrap: wrap; }\\n\\n.example-card {\\n  margin-right: 20px;\\n  margin-left: 20px;\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n  max-width: 400px;\\n  min-width: 200px;\\n  flex: 1; }\\n\\n.condition-good {\\n  background-color: #06a520; }\\n\\n.condition-bad {\\n  background-color: #dd1f06; }\\n\\n.container-one {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.container-two {\\n  display: flex; }\\n\"","import { Component, OnInit, HostListener, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router'\nimport { CloudReportService } from '../report.service';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-cloudreportcheckdetailcomponent',\n  templateUrl: 'component.html',\n  styleUrls: ['component.scss']\n})\nexport class CloudReportCheckCategoryComponent implements OnInit {\n\n  regions: string[];\n  checkCategories: object[];\n  selectedRegion: string;\n  globalService: boolean;\n  regionSelectValidate: boolean = false;\n  service: string;\n  scanReportData: Object;\n\n  constructor(private route: ActivatedRoute,\n    private cloudReportService: CloudReportService,\n    private elementRef: ElementRef,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.loadCheckCategoryPageData();\n  }\n\n  loadCheckCategoryPageData() {\n    this.service = this.route.snapshot.paramMap.get('service');\n    this.cloudReportService.getScanReportData()\n      .subscribe((data) => {\n        this.scanReportData = data;\n        const regionsHaveData = this.cloudReportService.getRegionsHaveData('aws.' + this.service, data);\n        if (regionsHaveData.length === 1) {\n          this.selectedRegion = regionsHaveData[0];\n          this.regionSelectValidate = true;\n          this.regions = regionsHaveData;\n        }\n        else {\n          this.regions = regionsHaveData;\n          this.selectedRegion = this.cloudReportService.manageRegion(undefined, 'aws.' + this.service, data);\n        }\n        this.checkCategories = this.cloudReportService.getCheckCategoryData('aws.' + this.service, this.selectedRegion, data);\n      })\n  }\n\n  onRegionChange(region) {\n    this.cloudReportService.manageRegion(region);\n    this.ngOnInit();\n  }\n\n  goToCheckDetail(checkCategory) {\n    this.router.navigate(['/report/checkDetail',\n      {\n        checkCategory: checkCategory['checkCategoryName'],\n        region: this.selectedRegion,\n        service: this.service\n      }\n    ]);\n  }\n\n}","module.exports = \"\\n<div style=\\\"\\n  display: flex;\\n  padding-top: 20px;\\n  padding-left: 10px;\\n  padding-right: 10px;\\n  padding-bottom: 10px;\\n  background-color: #8080801f;\\n  \\\">\\n  <div style=\\\"margin-right: 10px\\\">\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Services\\\" [(value)]=\\\"selectedService\\\" (selectionChange)=\\\"fetchServiceCheckCateroies()\\\">\\n        <mat-option *ngFor=\\\"let service of services\\\" [value]=\\\"service\\\">{{service}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n\\n  <div style=\\\"margin-right: 10px\\\">\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Checks\\\" [(value)]=\\\"selectedServiceCheckCategory\\\" (selectionChange)=\\\"fetchServiceCheckCateroyRegions()\\\">\\n        <mat-option *ngFor=\\\"let serviceCheckCategory of serviceCheckCategories\\\" [value]=\\\"serviceCheckCategory\\\">{{serviceCheckCategory}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n  <div style=\\\"margin-right: 10px\\\">\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Regions\\\" [(value)]=\\\"selectedServiceCheckCategoryRegion\\\" (selectionChange)=reload()>\\n        <mat-option *ngIf=\\\"serviceCheckCategoryRegions && (serviceCheckCategoryRegions.length > 1)\\\" [value]=\\\"'all'\\\">all</mat-option>\\n        <mat-option *ngFor=\\\"let serviceCheckCategoryRegion of serviceCheckCategoryRegions\\\" [value]=\\\"serviceCheckCategoryRegion\\\">{{serviceCheckCategoryRegion}}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n  </div>\\n  <!-- <div style=\\\"margin-right: 10px\\\">\\n    <button mat-flat-button (click)=\\\"reload()\\\">Go</button>\\n  </div> -->\\n  <div class=\\\"example-spacer\\\"></div>\\n  <div>\\n      <button mat-button (click)=\\\"goToServiceDashboard()\\\">Service dashboard</button>\\n    </div>\\n  <div>\\n    <button mat-button routerLink=\\\"/\\\">Main dashboard</button>\\n  </div>\\n</div>\\n\\n<mat-form-field>\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n<div class=\\\"check-detail-container mat-elevation-z8\\\">\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <ng-container matColumnDef=\\\"resourceName\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Resource Name </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"element.severity=='Good' ?  'good': (element.severity=='Warning' || element.severity=='Info' ? 'warning' : 'failure')\\\">\\n        {{element.resourceSummary.name}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"resourceValue\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Resource Value </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"element.severity=='Good' ?  'good': (element.severity=='Warning' || element.severity=='Info' ? 'warning' : 'failure')\\\">\\n        {{element.resourceSummary.value}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"region\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Region </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"element.severity=='Good' ?  'good': (element.severity=='Warning' || element.severity=='Info' ? 'warning' : 'failure')\\\">\\n          {{element.region}} </td>\\n      </ng-container>\\n\\n    <ng-container matColumnDef=\\\"message\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Message </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"element.severity=='Good' ?  'good': (element.severity=='Warning' || element.severity=='Info' ?  'warning' : 'failure')\\\">\\n        {{element.message}} </td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"severity\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Severity </th>\\n      <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"element.severity=='Good' ?  'good': (element.severity=='Warning' || element.severity=='Info' ? 'warning' : 'failure')\\\">\\n        {{element.severity}} </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n  <mat-paginator [length]=\\\"resultLength\\\" [pageSize]=\\\"10\\\" showFirstLastButtons></mat-paginator>\\n</div>\"","module.exports = \".example-spacer {\\n  flex: 1 1 auto; }\\n\\ntable {\\n  width: 100%; }\\n\\n.good {\\n  background-color: #5faa5f; }\\n\\n.warning {\\n  background-color: #caca00; }\\n\\n.failure {\\n  background-color: #da6868; }\\n\\n.mat-form-field {\\n  font-size: 14px;\\n  width: 100%; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CloudReportService } from '../report.service'\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\n\n@Component({\n    selector: 'app-cloudreportcheckdetail',\n    templateUrl: 'component.html',\n    styleUrls: ['component.scss']\n})\nexport class CloudReportCheckDetailComponent implements OnInit {\n\n    checksDetailData: object[];\n    displayedColumns = ['resourceName', 'resourceValue', 'region', 'message', 'severity'];\n    dataSource;\n    urlData: object = {};\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n    resultLength = 0;\n    services: string[];\n    selectedService: string;\n    serviceCheckCategories: string[];\n    selectedServiceCheckCategory: string;\n    serviceCheckCategoryRegions: string[];\n    selectedServiceCheckCategoryRegion: string;\n    hasNoRegions: boolean = true;\n\n    scanReportData: Object;\n\n    constructor(\n        private cloudReportService: CloudReportService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) { }\n\n    ngOnInit() {\n        this.loadCheckDetailPageData();\n    }\n\n    loadCheckDetailPageData() {\n        this.route.params.subscribe((params) => {\n            this.urlData['checkCategory'] = params['checkCategory'];\n            this.urlData['region'] = params['region'];\n            this.urlData['service'] = params['service'];\n            this.cloudReportService.getScanReportData()\n                .subscribe((data) => {\n                    this.scanReportData = data;\n                    this.services = this.cloudReportService.getServices(data);\n                    this.selectedService = this.urlData['service'];\n                    this.serviceCheckCategories = this.cloudReportService.getServiceCheckCategories('aws.' + this.selectedService, data);\n                    this.selectedServiceCheckCategory = this.urlData['checkCategory'];\n                    this.serviceCheckCategoryRegions = this.cloudReportService.getServiceCheckCategoryRegions('aws.' + this.selectedService, this.selectedServiceCheckCategory, data);\n                    this.selectedServiceCheckCategoryRegion = this.urlData['region'];\n\n                    let checkDetailData = this.cloudReportService.getCheckDetailData(this.urlData['region'], 'aws.' + this.urlData['service'], this.urlData['checkCategory'], data);\n                    checkDetailData = checkDetailData.map((eachData) => {\n                        eachData['resourceSummaryName'] = eachData['resourceSummary']['name'];\n                        eachData['resourceSummaryValue'] = eachData['resourceSummary']['value'];\n                        eachData['message'] = eachData['message'];\n                        eachData['severity'] = eachData['severity'];\n                        return eachData;\n                    })\n                    this.resultLength = checkDetailData.length;\n                    this.dataSource = new MatTableDataSource(checkDetailData);\n                    this.dataSource.paginator = this.paginator;\n                    this.dataSource.sort = this.sort;\n\n                }, (error) => {\n                    console.log(error);\n                })\n        })\n    }\n\n    applyFilter(filterValue: string) {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n    }\n\n    fetchServiceCheckCateroies() {\n        this.serviceCheckCategories = this.cloudReportService.getServiceCheckCategories('aws.' + this.selectedService, this.scanReportData)\n        this.serviceCheckCategoryRegions = [];\n    }\n\n    fetchServiceCheckCateroyRegions() {\n        this.selectedServiceCheckCategoryRegion = undefined;\n        this.serviceCheckCategoryRegions = this.cloudReportService.getServiceCheckCategoryRegions('aws.' + this.selectedService, this.selectedServiceCheckCategory, this.scanReportData);\n        this.reload();\n    }\n\n    reload() {\n        if (!this.selectedService || !this.selectedServiceCheckCategory || !this.selectedServiceCheckCategoryRegion) {\n            console.log('something is missing in selectedService = ' + this.selectedService + ' or selectedServiceCheckCategory = ' + this.selectedServiceCheckCategory + ' or selectedServiceCheckCategoryRegion =' + this.selectedServiceCheckCategoryRegion);\n            return;\n        }\n        console.log('all data is present, selectedService = ' + this.selectedService + ' or selectedServiceCheckCategory = ' + this.selectedServiceCheckCategory + ' or selectedServiceCheckCategoryRegion =' + this.selectedServiceCheckCategoryRegion + ' and reloading page');\n        this.router.navigate(['/report/checkDetail', {\n            checkCategory: this.selectedServiceCheckCategory,\n            region: this.selectedServiceCheckCategoryRegion,\n            service: this.selectedService\n        }])\n    }\n\n    goToServiceDashboard() {\n        this.router.navigate(['/report/checkCategory', this.selectedService])\n    }\n\n}","module.exports = \"<mat-card class=\\\"example-card\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n        \\n        <ng-container matColumnDef=\\\"services\\\">\\n            <th mat-header-cell *matHeaderCellDef class=\\\"column-header column-desc-normal\\\"> Services  </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"element.noOfFailures>0 ?  'column-desc-alert': 'column-desc-good'\\\"> {{element.service}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"noOfChecks\\\">\\n            <th mat-header-cell *matHeaderCellDef class=\\\"column-header column-desc-normal\\\"> No. of checks </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"element.noOfFailures>0 ?  'column-desc-alert': 'column-desc-good'\\\"> {{element.noOfChecks}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"noOfFailures\\\">\\n            <th mat-header-cell *matHeaderCellDef class=\\\"column-header column-desc-normal\\\"> No. of failures </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"element.noOfFailures>0 ?  'column-desc-alert': 'column-desc-good'\\\"> {{element.noOfFailures}} </td>\\n        </ng-container>\\n\\n        \\n        <ng-container matColumnDef=\\\"action\\\">\\n            <th mat-header-cell *matHeaderCellDef class=\\\"column-header column-desc-normal\\\"> Action </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" [ngClass]=\\\"element.noOfFailures>0 ?  'column-desc-alert': 'column-desc-good'\\\"> <button mat-button (click)=\\\"goToService(element)\\\">View details</button> </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n</mat-card>\"","module.exports = \"table {\\n  width: 100%; }\\n\\n.column-header {\\n  font-size: 120%; }\\n\\n.column-desc-good {\\n  text-align: center;\\n  background-color: #099b09; }\\n\\n.column-desc-alert {\\n  text-align: center;\\n  background-color: #da6868; }\\n\\n.column-desc-normal {\\n  text-align: center;\\n  background-color: lightgray; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CloudReportService } from '../report.service'\nimport { Router } from '@angular/router';\nimport { MatTableDataSource } from '@angular/material';\n\n@Component({\n  selector: 'app-cloudreportdashboardcomponent',\n  templateUrl: 'component.html',\n  styleUrls: ['component.scss']\n})\nexport class CloudReportDashboardComponent implements OnInit {\n\n  displayedColumns: string[] = ['services', 'noOfChecks', 'noOfFailures', 'action'];\n  dataSource;\n  scanReportData: Object;\n\n  constructor(private cloudReportService: CloudReportService, private router: Router) { }\n\n  ngOnInit() {\n    this.loadDashboardData();\n  }\n\n  loadDashboardData() {\n    this.cloudReportService.getScanReportData()\n      .subscribe((data) => {\n        const dashboardData = this.cloudReportService.getDashboardData(data);\n        this.dataSource = new MatTableDataSource(dashboardData);\n      }, (error) => {\n        console.log(error);\n      }\n      )\n  }\n\n  goToService(element) {\n    this.router.navigate(['report/checkCategory', element.service]);\n  }\n\n\n}","import { CloudReportCheckDetailComponent } from './checkDetail/component';\nimport { CloudReportCheckCategoryComponent } from './checkCategory/component';\nimport { CloudReportService } from './report.service';\nimport { CloudReportDashboardComponent } from './dashboard/component';\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '../../../node_modules/@angular/common';\nimport {\n    MatSelectModule,\n    MatTableModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatPaginatorModule,\n    MatInputModule,\n    MatMenuModule\n} from '@angular/material';\n\n@NgModule({\n    declarations: [\n        CloudReportDashboardComponent,\n        CloudReportCheckCategoryComponent,\n        CloudReportCheckDetailComponent\n    ],\n    imports: [\n        CommonModule,\n        MatSelectModule,\n        MatSelectModule,\n        MatTableModule,\n        MatCardModule,\n        MatButtonModule,\n        MatToolbarModule,\n        MatPaginatorModule,\n        MatInputModule,\n        MatMenuModule,\n        RouterModule.forChild([\n            { path: 'report/dashboard', component: CloudReportDashboardComponent },\n            { path: 'report/checkCategory/:service', component: CloudReportCheckCategoryComponent },\n            { path: 'report/checkDetail', component: CloudReportCheckDetailComponent }\n        ]),\n        HttpClientModule\n    ],\n    providers: [CloudReportService]\n})\nexport class ReportModule { }","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class CloudReportService {\n\n    scanReportData: Object;\n\n    constructor(private http: HttpClient) { }\n\n    getScanReportData() {\n        return this.http.get('assets/data.json');\n    }\n    /**\n     * Get report dashboard data\n    */\n    getDashboardData(scanReportData) {\n        console.log(scanReportData);\n        \n        const data = scanReportData;\n        let dashboardData: object[] = [];\n        for (let serviceObjectKey in data) {  // each service\n            let serviceData: object = {};\n            serviceData['service'] = serviceObjectKey.split('.')[1];\n            serviceData['noOfChecks'] = 0;\n            serviceData['noOfFailures'] = 0;\n            for (let checkObjectKey in data[serviceObjectKey]) {\n                if (data[serviceObjectKey][checkObjectKey].regions.hasOwnProperty('global')) {\n                    const resources = data[serviceObjectKey][checkObjectKey].regions.global;\n                    for (let i = 0; i < resources.length; i++) {\n                        const severity = resources[i].severity;\n                        serviceData['noOfChecks']++;\n                        if (severity === 'Warning' || severity === 'Failure') {\n                            serviceData['noOfFailures']++;\n                        }\n                    }\n                }\n                else {\n                    for (let region in data[serviceObjectKey][checkObjectKey].regions) {\n                        const resources = data[serviceObjectKey][checkObjectKey].regions[region];\n                        // console.log(resources)\n                        for (let i = 0; i < resources.length; i++) {\n                            const severity = resources[i].severity;\n                            // console.log(serviceObjectKey +' '+ checkObjectKey +' '+ severity);\n                            serviceData['noOfChecks']++;\n                            if (severity === 'Warning' || severity === 'Failure') {\n                                serviceData['noOfFailures']++;\n                            }\n                        }\n                    }\n                }\n            }\n            if (serviceData['noOfChecks'] == 0) {\n                continue;\n            }\n            dashboardData.push(serviceData);\n        }\n        return dashboardData;\n    }\n\n    /**\n     * Return true if has data\n     * otherwise false\n    */\n    checkServiceCheckCategoryHasData(checkCategoryObject) {\n        const regionsObject = checkCategoryObject['regions'];\n        for (let regionsObjectKey in regionsObject) {\n            if (regionsObject[regionsObjectKey].length >= 1) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    checkServiceHasData(serviceObject) {\n        for (let checkCategoryObjectKey in serviceObject) {\n            const regionsObject = serviceObject[checkCategoryObjectKey]['regions'];\n            for (let regionsObjectKey in regionsObject) {\n                if (regionsObject[regionsObjectKey].length >= 1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    getRegions() {\n        return [\n            'us-east-2',\n            'us-east-1',\n            'us-west-1',\n            'us-west-2',\n            'ap-northeast-1',\n            'ap-northeast-2',\n            'ap-northeast-3',\n            'ap-south-1',\n            'ap-southeast-1',\n            'ap-southeast-2',\n            'ca-central-1',\n            'cn-north-1',\n            'cn-northwest-1',\n            'eu-central-1',\n            'eu-west-1',\n            'eu-west-2',\n            'eu-west-3',\n            'sa-east-1'\n        ]\n    }\n\n    replaceUnderscoreWithSpace(string) {\n        return string.split('_').join(' ');\n    }\n\n    replaceSpaceWithUnderscore(string) {\n        return string.split(' ').join('_');\n    }\n\n    checkHasData(data, dataArray) {\n        for (let i = 0; i < dataArray.length; i++) {\n            if (data === dataArray[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    isServiceGlobal(service) {\n        if (service === 's3' || service === 'cloudfront' || service === 'cloudformation') {\n            return true;\n        }\n        return false;\n    }\n\n    /** \n     * Check Category functions \n     * */\n    getCheckCategoryData(service, region, data) {\n        // console.log(service, region)\n        let checkCategoryData: object[] = [];\n        let regionsHaveData = [];\n        for (let serviceObjectKey in data) {\n            if (serviceObjectKey === service) {\n                for (let checkCategoryObjectKey in data[serviceObjectKey]) {\n                    let serviceData: object = {};\n                    serviceData['badConditionCount'] = 0;\n                    serviceData['goodConditionCount'] = 0;\n                    serviceData['checkCategoryName'] = this.replaceUnderscoreWithSpace(checkCategoryObjectKey);\n                    const regionsObject = data[serviceObjectKey][checkCategoryObjectKey]['regions'];\n                    if (regionsObject.hasOwnProperty('global')) {\n                        if (regionsObject.global.length < 1) {\n                            continue;\n                        }\n                        else if (regionsObject.global.length > 1) {\n                            if (!this.checkHasData('global', regionsHaveData)) {\n                                regionsHaveData.push('global')\n                                serviceData['regionsHaveData'] = regionsHaveData;\n                            }\n                            for (let i = 0; i < regionsObject.global.length; i++) {\n                                const resourceObject = regionsObject.global[i];\n                                const severity = resourceObject.severity;\n                                if (resourceObject.severity === 'Good') {\n                                    serviceData['goodConditionCount']++;\n                                }\n                                else if (severity === 'Warning' || severity === 'Failure') {\n                                    serviceData['badConditionCount']++;\n                                }\n                            }\n                        }\n                    }\n                    else if (region === 'all') {\n                        for (let regionsObjectKey in regionsObject) {\n                            const regionData = regionsObject[regionsObjectKey];\n                            if (regionData.length < 1) {\n                                continue;\n                            }\n                            else if (regionData.length >= 1) {\n                                if (!this.checkHasData(regionsObjectKey, regionsHaveData))\n                                    regionsHaveData.push(regionsObjectKey);\n                                for (let i = 0; i < regionData.length; i++) {\n                                    const resourceObject = regionData[i];\n                                    const severity = resourceObject.severity;\n                                    if (resourceObject.severity === 'Good') {\n                                        serviceData['goodConditionCount']++;\n                                    }\n                                    else if (severity === 'Warning' || severity === 'Failure') {\n                                        serviceData['badConditionCount']++;\n                                    }\n                                }\n                            }\n                        }\n                        serviceData['regionsHaveData'] = regionsHaveData;\n                    }\n                    else {\n                        for (let regionsObjectKey in regionsObject) {\n                            if (regionsObjectKey === region) {\n                                const regionData = regionsObject[regionsObjectKey];\n                                if (regionData.length < 1) {\n                                    continue;\n                                }\n                                else if (regionData.length >= 1) {\n                                    for (let i = 0; i < regionData.length; i++) {\n                                        const resourceObject = regionData[i];\n                                        const severity = resourceObject.severity;\n                                        if (resourceObject.severity === 'Good') {\n                                            serviceData['goodConditionCount']++;\n                                        }\n                                        else if (severity === 'Warning' || severity === 'Failure') {\n                                            serviceData['badConditionCount']++;\n                                        }\n                                    }\n                                    if (!this.checkHasData(region, regionsHaveData))\n                                        regionsHaveData.push(region);\n                                }\n                            }\n                        }\n                        serviceData['regionsHaveData'] = regionsHaveData;\n                    }\n                    if (serviceData['badConditionCount'] == 0 && serviceData['goodConditionCount'] == 0) {\n                        continue;\n                    }\n                    checkCategoryData.push(serviceData);\n                }\n            }\n        }\n        return checkCategoryData;\n    }\n\n    getRegionsHaveData(service, data) {\n        // console.log(service)\n        let regionsHaveData = [];\n        for (let serviceObjectKey in data) {\n            if (serviceObjectKey === service) {\n                for (let checkCategoryKey in data[serviceObjectKey]) {\n                    for (let regionObjectKey in data[serviceObjectKey][checkCategoryKey].regions) {\n                        if (data[serviceObjectKey][checkCategoryKey].regions[regionObjectKey].length >= 1) {\n                            if (!this.checkHasData(regionObjectKey, regionsHaveData))\n                                regionsHaveData.push(regionObjectKey);\n                        }\n                    }\n                }\n            }\n        }\n        return regionsHaveData;\n    }\n\n    manageRegion(region?, service?, data?) {\n        if (!region && !localStorage.getItem('awsRegion')) {\n            localStorage.setItem('awsRegion', 'all');\n        }\n        else if (region) {\n            localStorage.setItem('awsRegion', region);\n        }\n        else if (service) {\n            const selectedRegion = localStorage.getItem('awsRegion');\n            const regionsHaveData = this.getRegionsHaveData(service, data);\n            // console.log(selectedRegion, regionsHaveData)\n            for (let i = 0; i < regionsHaveData.length; i++) {\n                if (selectedRegion == regionsHaveData[i]) {\n                    return localStorage.getItem('awsRegion');\n                }\n            }\n            localStorage.setItem('awsRegion', 'all');\n        }\n        return localStorage.getItem('awsRegion');\n    }\n\n    getCheckDetailData(region: string, service: string, checkCategory: string, data) {\n        checkCategory = this.replaceSpaceWithUnderscore(checkCategory.toLowerCase()); // Modify checkCategory name\n        // console.log(service + ' ' + region + ' ' + checkCategory)\n        let checkDetailData: object[] = [];\n        for (let serviceObjectKey in data) {\n            if (serviceObjectKey === service) {\n                for (let checkCategoryObjectKey in data[serviceObjectKey]) {\n                    if (checkCategoryObjectKey === checkCategory) {\n                        const regionsObject = data[serviceObjectKey][checkCategoryObjectKey]['regions'];\n                        if (regionsObject.hasOwnProperty('global') && region === 'global') {\n                            for (let i = 0; i < regionsObject['global'].length; i++) {\n                                regionsObject['global'][i].region = 'global';\n                                checkDetailData.push(regionsObject['global'][i]);\n                            }\n                        }\n                        else if (region == 'all') {\n                            for (let regionKey in regionsObject) {\n                                for (let i = 0; i < regionsObject[regionKey].length; i++) {\n                                    regionsObject[regionKey][i].region = regionKey;\n                                    checkDetailData.push(regionsObject[regionKey][i]);\n                                }\n                            }\n                        }\n                        else {\n                            for (let regionKey in regionsObject) {\n                                if (regionKey === region) {\n                                    for (let i = 0; i < regionsObject[regionKey].length; i++) {\n                                        regionsObject[regionKey][i].region = regionKey;\n                                        checkDetailData.push(regionsObject[regionKey][i]);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // console.log(checkDetailData)\n        return checkDetailData;\n    }\n\n    /** \n     * Return services which are \n     * present in report data and have data\n     */\n    getServices(data) {\n        let services = [];\n        for (let serviceObjectKey in data) {\n            if (this.checkServiceHasData(data[serviceObjectKey])) {\n                services.push(serviceObjectKey.split('.')[1]);\n            }\n        }\n        return services;\n    }\n\n    /** \n     * Return check categories\n     * based on service\n    */\n    getServiceCheckCategories(service, data) {\n        let checkCategories = [];\n        for (let serviceObjectKey in data) {\n            if (service === serviceObjectKey) {\n                for (let checkCategoryObjectKey in data[serviceObjectKey]) {\n                    const checkCategoryObject = data[serviceObjectKey][checkCategoryObjectKey];\n                    if (this.checkServiceCheckCategoryHasData(checkCategoryObject)) {\n                        checkCategories.push(this.replaceUnderscoreWithSpace(checkCategoryObjectKey));\n                    }\n                }\n            }\n        }\n        return checkCategories;\n    }\n\n    /** \n     * Return regions based on service and check category\n    */\n    getServiceCheckCategoryRegions(service, serviceCheckCategory, data) {\n        let regionsHaveData = [];\n        serviceCheckCategory = this.replaceSpaceWithUnderscore(serviceCheckCategory);\n        for (let serviceObjectKey in data) {\n            if (serviceObjectKey === service) {\n                for (let checkCategoryKey in data[serviceObjectKey]) {\n                    if (checkCategoryKey === serviceCheckCategory) {\n                        for (let regionObjectKey in data[serviceObjectKey][checkCategoryKey].regions) {\n                            if (data[serviceObjectKey][checkCategoryKey].regions[regionObjectKey].length >= 1) {\n                                if (!this.checkHasData(regionObjectKey, regionsHaveData))\n                                    regionsHaveData.push(regionObjectKey);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // console.log(regionsHaveData)\n        return regionsHaveData;\n    }\n\n\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}